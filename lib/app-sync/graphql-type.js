"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.JompxGraphqlType = void 0;
const appsync = require("@aws-cdk/aws-appsync-alpha");
/**
 * Extend GraphqlType to create a new datatype to include a new typeName property.
 */
class JompxGraphqlType extends appsync.GraphqlType {
    constructor(type, options) {
        var _a;
        super(type, options);
        this.typeName = '';
        this.typeName = (_a = options === null || options === void 0 ? void 0 : options.typeName) !== null && _a !== void 0 ? _a : '';
    }
    static objectType(options) {
        return new JompxGraphqlType(appsync.Type.INTERMEDIATE, options);
    }
    /**
     * Resolve a JompxGraphqlType with string type to a GraphqlType with actual type.
     */
    resolve(schemaTypes) {
        const objectType = schemaTypes.objectTypes[this.typeName];
        if (!objectType)
            throw Error(`Jompx: Type '${this.typeName}' not found for JompxGraphqlType! Add type to schema types.`);
        const newGraphqlType = schemaTypes.objectTypes[this.typeName].attribute(this);
        return newGraphqlType;
    }
}
exports.JompxGraphqlType = JompxGraphqlType;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JhcGhxbC10eXBlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2FwcC1zeW5jL2dyYXBocWwtdHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxzREFBc0Q7QUFnQnREOztHQUVHO0FBQ0gsTUFBYSxnQkFBaUIsU0FBUSxPQUFPLENBQUMsV0FBVztJQVFyRCxZQUFzQixJQUFrQixFQUFFLE9BQWlDOztRQUN2RSxLQUFLLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBSFQsYUFBUSxHQUFXLEVBQUUsQ0FBQztRQUlsQyxJQUFJLENBQUMsUUFBUSxTQUFHLE9BQU8sYUFBUCxPQUFPLHVCQUFQLE9BQU8sQ0FBRSxRQUFRLG1DQUFJLEVBQUUsQ0FBQztJQUM1QyxDQUFDO0lBVE0sTUFBTSxDQUFDLFVBQVUsQ0FBQyxPQUFpQztRQUN0RCxPQUFPLElBQUksZ0JBQWdCLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDcEUsQ0FBQztJQVNEOztPQUVHO0lBQ0ksT0FBTyxDQUFDLFdBQXlCO1FBRXBDLE1BQU0sVUFBVSxHQUFHLFdBQVcsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzFELElBQUksQ0FBQyxVQUFVO1lBQUUsTUFBTSxLQUFLLENBQUMsZ0JBQWdCLElBQUksQ0FBQyxRQUFRLDZEQUE2RCxDQUFDLENBQUM7UUFFekgsTUFBTSxjQUFjLEdBQUcsV0FBVyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzlFLE9BQU8sY0FBYyxDQUFDO0lBQzFCLENBQUM7Q0FDSjtBQXhCRCw0Q0F3QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBhcHBzeW5jIGZyb20gJ0Bhd3MtY2RrL2F3cy1hcHBzeW5jLWFscGhhJztcclxuaW1wb3J0IHsgSVNjaGVtYVR5cGVzIH0gZnJvbSAnLi9hcHAtc3luYy50eXBlcyc7XHJcblxyXG4vKipcclxuICogR29hTDogQWxsb3cgc2NoZW1hIHRvIGluY2x1ZGUgUmVzb2x2YWJsZUZpZWxkIGRlZmludGlpb24gd2l0aCBzdHJpbmcgdHlwZSBpbnN0ZWFkIG9mIGFjdHVhbCB0eXBlIHRvIHdvcmsgYXJvdW5kIHRoZSB0eXBlIGNoaWNrZW4gb3IgZWdnIHByb2JsZW0uXHJcbiAqIENyZWF0ZSBhbiBpbXBsZW1lbnRpb24gYXMgY2xvc2UgdG8gbmF0aXZlIEFwcFN5bmMgYXMgcG9zc2libGUuIERvIE5PVCBmb3JjZSBhIGRldmVsb3BlciB0byBsZWFybiBuZXcgY3VzdG9tIHN5bnRheC5cclxuICogU2VlIHNldFJlc29sdmFibGVGaWVsZFR5cGUgbWV0aG9kIGZvciBtb3JlIGluZm9ybWF0aW9uLlxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBFeHRlbmQgR3JhcGhxbFR5cGVPcHRpb25zIHRvIGluY2x1ZGUgYSBuZXcgdHlwZU5hbWUgcGFyYW1ldGVyLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBKb21weEdyYXBocWxUeXBlT3B0aW9ucyBleHRlbmRzIGFwcHN5bmMuR3JhcGhxbFR5cGVPcHRpb25zIHtcclxuICAgIHJlYWRvbmx5IHR5cGVOYW1lOiBzdHJpbmc7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBFeHRlbmQgR3JhcGhxbFR5cGUgdG8gY3JlYXRlIGEgbmV3IGRhdGF0eXBlIHRvIGluY2x1ZGUgYSBuZXcgdHlwZU5hbWUgcHJvcGVydHkuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgSm9tcHhHcmFwaHFsVHlwZSBleHRlbmRzIGFwcHN5bmMuR3JhcGhxbFR5cGUge1xyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgb2JqZWN0VHlwZShvcHRpb25zPzogSm9tcHhHcmFwaHFsVHlwZU9wdGlvbnMpOiBhcHBzeW5jLkdyYXBocWxUeXBlIHtcclxuICAgICAgICByZXR1cm4gbmV3IEpvbXB4R3JhcGhxbFR5cGUoYXBwc3luYy5UeXBlLklOVEVSTUVESUFURSwgb3B0aW9ucyk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHJlYWRvbmx5IHR5cGVOYW1lOiBzdHJpbmcgPSAnJztcclxuXHJcbiAgICBwcm90ZWN0ZWQgY29uc3RydWN0b3IodHlwZTogYXBwc3luYy5UeXBlLCBvcHRpb25zPzogSm9tcHhHcmFwaHFsVHlwZU9wdGlvbnMpIHtcclxuICAgICAgICBzdXBlcih0eXBlLCBvcHRpb25zKTtcclxuICAgICAgICB0aGlzLnR5cGVOYW1lID0gb3B0aW9ucz8udHlwZU5hbWUgPz8gJyc7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXNvbHZlIGEgSm9tcHhHcmFwaHFsVHlwZSB3aXRoIHN0cmluZyB0eXBlIHRvIGEgR3JhcGhxbFR5cGUgd2l0aCBhY3R1YWwgdHlwZS5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHJlc29sdmUoc2NoZW1hVHlwZXM6IElTY2hlbWFUeXBlcyk6IGFwcHN5bmMuR3JhcGhxbFR5cGUge1xyXG5cclxuICAgICAgICBjb25zdCBvYmplY3RUeXBlID0gc2NoZW1hVHlwZXMub2JqZWN0VHlwZXNbdGhpcy50eXBlTmFtZV07XHJcbiAgICAgICAgaWYgKCFvYmplY3RUeXBlKSB0aHJvdyBFcnJvcihgSm9tcHg6IFR5cGUgJyR7dGhpcy50eXBlTmFtZX0nIG5vdCBmb3VuZCBmb3IgSm9tcHhHcmFwaHFsVHlwZSEgQWRkIHR5cGUgdG8gc2NoZW1hIHR5cGVzLmApO1xyXG5cclxuICAgICAgICBjb25zdCBuZXdHcmFwaHFsVHlwZSA9IHNjaGVtYVR5cGVzLm9iamVjdFR5cGVzW3RoaXMudHlwZU5hbWVdLmF0dHJpYnV0ZSh0aGlzKTtcclxuICAgICAgICByZXR1cm4gbmV3R3JhcGhxbFR5cGU7XHJcbiAgICB9XHJcbn0iXX0=