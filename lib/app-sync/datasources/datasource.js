"use strict";
// TODO: Where is the AppSync event type i.e. AppSyncResolverEvent? cdk.aws_lambda_event_sources.ApiEventSource
// import * as cdk from 'aws-cdk-lib';
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppSyncDatasource = void 0;
class AppSyncDatasource {
    constructor(event) {
        this.event = event;
    }
}
exports.AppSyncDatasource = AppSyncDatasource;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YXNvdXJjZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hcHAtc3luYy9kYXRhc291cmNlcy9kYXRhc291cmNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSwrR0FBK0c7QUFDL0csc0NBQXNDOzs7QUErRXRDLE1BQWEsaUJBQWlCO0lBSTFCLFlBQVksS0FBNEI7UUFDcEMsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7SUFDdkIsQ0FBQztDQVlKO0FBbEJELDhDQWtCQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFRPRE86IFdoZXJlIGlzIHRoZSBBcHBTeW5jIGV2ZW50IHR5cGUgaS5lLiBBcHBTeW5jUmVzb2x2ZXJFdmVudD8gY2RrLmF3c19sYW1iZGFfZXZlbnRfc291cmNlcy5BcGlFdmVudFNvdXJjZVxyXG4vLyBpbXBvcnQgKiBhcyBjZGsgZnJvbSAnYXdzLWNkay1saWInO1xyXG5cclxuLypcclxuZXZlbnQge1xyXG4gIGFyZ3VtZW50czogeyBmaWx0ZXI6IHsgYTogMSB9LCBza2lwOiAxMCwgbGltaXQ6IDEwIH0sXHJcbiAgaWRlbnRpdHk6IHtcclxuICAgIGFjY291bnRJZDogJzA2NjIwOTY1MzU2NycsXHJcbiAgICBjb2duaXRvSWRlbnRpdHlBdXRoUHJvdmlkZXI6IG51bGwsXHJcbiAgICBjb2duaXRvSWRlbnRpdHlBdXRoVHlwZTogbnVsbCxcclxuICAgIGNvZ25pdG9JZGVudGl0eUlkOiBudWxsLFxyXG4gICAgY29nbml0b0lkZW50aXR5UG9vbElkOiBudWxsLFxyXG4gICAgc291cmNlSXA6IFsgJzIwNS4yNTEuMjMzLjMzJyBdLFxyXG4gICAgdXNlckFybjogJ2Fybjphd3M6c3RzOjowNjYyMDk2NTM1Njc6YXNzdW1lZC1yb2xlL0FXU1Jlc2VydmVkU1NPX0FkbWluaXN0cmF0b3JBY2Nlc3NfOTVhY2RiYzgxYzg0NGM1Ni9hZG1pbicsXHJcbiAgICB1c2VybmFtZTogJ0FST0FRNjJUSEVNNzZYUTZUT1VQSzphZG1pbidcclxuICB9LFxyXG4gIHNvdXJjZTogbnVsbCxcclxuICByZXF1ZXN0OiB7XHJcbiAgICBoZWFkZXJzOiB7XHJcbiAgICAgICdjb250ZW50LWVuY29kaW5nJzogJ2Ftei0xLjAnLFxyXG4gICAgICAneC1mb3J3YXJkZWQtZm9yJzogJzIwNS4yNTEuMjMzLjMzLCA3MC4xMzIuMzEuNzInLFxyXG4gICAgICAnY2xvdWRmcm9udC12aWV3ZXItY291bnRyeSc6ICdVUycsXHJcbiAgICAgICdjbG91ZGZyb250LWlzLXRhYmxldC12aWV3ZXInOiAnZmFsc2UnLFxyXG4gICAgICAneC1hbXpuLXJlcXVlc3RpZCc6ICdmMDNlZWExNS0wM2E1LTRiZGQtODdhMS1lNDAyNmI4ZjU1YzInLFxyXG4gICAgICB2aWE6ICcxLjEgMGFlYmYzZmU0MzNmZjk2ZTY4ZDc4NWZhZDRlYTRjMGUuY2xvdWRmcm9udC5uZXQgKENsb3VkRnJvbnQpJyxcclxuICAgICAgJ2Nsb3VkZnJvbnQtZm9yd2FyZGVkLXByb3RvJzogJ2h0dHBzJyxcclxuICAgICAgJ2NvbnRlbnQtbGVuZ3RoJzogJzIyNycsXHJcbiAgICAgIGhvc3Q6ICdyZDdiNHgycmJqaGE3azJ0aTZ6NnlqZWRseS5hcHBzeW5jLWFwaS51cy13ZXN0LTIuYW1hem9uYXdzLmNvbScsXHJcbiAgICAgICd4LWZvcndhcmRlZC1wcm90byc6ICdodHRwcycsXHJcbiAgICAgICd1c2VyLWFnZW50JzogJ2F3cy1pbnRlcm5hbC8zIGF3cy1zZGstamF2YS8xLjEyLjE4MiBMaW51eC81LjQuMTgxLTEwOS4zNTQuYW16bjJpbnQueDg2XzY0IE9wZW5KREtfNjQtQml0X1NlcnZlcl9WTS8yNS4zMjItYjA2IGphdmEvMS44LjBfMzIyIGtvdGxpbi8xLjMuNzIgdmVuZG9yL09yYWNsZV9Db3Jwb3JhdGlvbiBjZmcvcmV0cnktbW9kZS9zdGFuZGFyZCcsXHJcbiAgICAgICdjbG91ZGZyb250LWlzLW1vYmlsZS12aWV3ZXInOiAnZmFsc2UnLFxyXG4gICAgICBhY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHQnLFxyXG4gICAgICAneC1hbXotZGF0ZSc6ICcyMDIyMDQxMFQyMTUzNDhaJyxcclxuICAgICAgJ2Nsb3VkZnJvbnQtaXMtc21hcnR0di12aWV3ZXInOiAnZmFsc2UnLFxyXG4gICAgICAnYW16LXNkay1yZXF1ZXN0JzogJ3R0bD0yMDIyMDQxMFQyMTU0NDhaO2F0dGVtcHQ9MTttYXg9MScsXHJcbiAgICAgICdhbXotc2RrLWludm9jYXRpb24taWQnOiAnNDZhMGU0OWYtZjAwOS1jYmFiLTgwNGUtNTkyNDFmZjAyOGUzJyxcclxuICAgICAgJ3gtYW16LXNlY3VyaXR5LXRva2VuJzogJ0lRb0piM0pwWjJsdVgyVmpFSFVhQ1hWekxYZGxjM1F0TWlKR01FUUNJQ0NyM1A4U3VkUkR2ZVBLOFRXWXZiTTVWLyttWmpxb3VXdGQvcERycXBtcUFpQmcxZzhsT1gyeGpnK1NuZEZSZlo0aUxNTTlkYk9pNEZyMmhYdTlESXlybnlyMkF3Z2VFQUFhRERBMk5qSXdPVFkxTXpVMk55SU1ub2s4SWRjMjQ1QmQ0bC9RS3RNRFE2cHJ6b2F5eTZ1NGk2Z1lvSmZYd0t5ajFaVmZSYWdUNmcwbm40cHlSczVyY0YyV2RvbmcxeVlNTGwrQ0NjVFpJUEZ4Q0hndHZuR2VvUkVWeXl5SndBNDhJUjlia0dWQTNxVmtELzVZS3dSbTBnanZQRHZ4eVVTUTJYUVBaK2oyaG50OHFzbm5xUk9tM0hVd1lPOHNGVGtDaU9vYTlqSTd6VVRKNTRmZHVuLzNsbk1oU0xlTWNQT2wwVUZMcG1WcCtuck4rSzlkU2c0c3VIZW1sTERYRW96ck5BWitzc1VvZW9ROEVQWDJ0dGxDNWNpL05ZS3pNTjlXcERxYStQOFNqUk45a3pNbUkybk5jVkw5ZFJKT1JpZXFVUkpiRkFpRnpaMEVxMzMyelhjS0tLN29BeDBzNTdUZTVHbldmNzF6RDh2OU9RWDJNZEpzMXFzTVo4ZStiYjVWSitHaTFMbEorNExFekdoSzJ0WmxJanZDNFRPc3B6ZHVjdmlOa2QvbmZ2TFlBNGtNTkMvMjN5VitUb3hHdTFNSnl2T0o3OW1meERML1J2cFBZSXc4V3pDclJuSitrdE8vVTI5czdPY3F5TG1pZGlFQTlqK0R0R2prTjZmR3B5aDIwQjZNL1phTk5PTjJVRlhRM2RYMHZ5aVlJdDg1VkZkaDdMc016eTJSL1FFSzBvWENQdVdacUo3Mk5naWpDcUJxRTY2aE41QVREWDNETXRBSWdjVThXM1RpNlo5SlpXTXN3RTNPM0Zkdy8yNkEvS0JYc0xVWEttWTFDc21IZnhoeGNrY1AwendYWWJVS0ZmY2lZV2M4SUhvd3N2M01rZ1k2bVFJNjBVR1VIY3FKKzJtc3NKZGFtNFlqTjVBZTdGRXBVT0VMb3JwQUNMKzFoNyt1QW5JblJwVlJweWQrQWE3T3RKK3RrS0wvRkpFcER3elN2SWsrNnRmK0dZQy9RbWt1VVhQQkVwaE9iLzIvbi9hcUZqanRCQlpyN25yeDZ5QkpsV2ZLcm9kNFI3R1FrSTE5ajBmU1c4TTlTMDZoRE5GUXo2OTRyR3g4a1BxTUpmbElPNnlOdER6aWc1T1hyRDFkeUpkRUJVQ3JjMFphR0l4L29jRVpwbGtIV1MyTWhoL2lha0VqZ2JzVFZOYjZjMWhQUUFMT3ZWejdnRitTQlFxM0NFL2ZzZXlkT1VJVFFjUjh4YWZnbURPN3hkRjB1c0xZdDhEWG01OHlhRWQrcE50cjV1N3ZzNWFGc3BvZlBMaElkdHRySzFLbkc5TFpsTGZsWmE4WmhVdkppZlJpTCt2QlZuUVJiUmI1R05VaFo3OS94TWhwZFY4UmdRPT0nLFxyXG4gICAgICAnY29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICAneC1hbXotY2YtaWQnOiAnLVMyQVZFell5Yi1Yb3gyQkw5bkRDa2gzTlhBb01KdmlsbUJhZFMwWEgzSkF4WEh2d1MwU013PT0nLFxyXG4gICAgICAneC1hbXpuLXRyYWNlLWlkJzogJ1Jvb3Q9MS02MjUzNTFlYy0yOTBiM2Y2ODYyYjk5YTY5MzFmMzZiYjknLFxyXG4gICAgICBhdXRob3JpemF0aW9uOiAnQVdTNC1ITUFDLVNIQTI1NiBDcmVkZW50aWFsPUFTSUFRNjJUSEVNN1M3SFRPQ0dWLzIwMjIwNDEwL3VzLXdlc3QtMi9hcHBzeW5jL2F3czRfcmVxdWVzdCwgU2lnbmVkSGVhZGVycz1hY2NlcHQ7Y29udGVudC1lbmNvZGluZztjb250ZW50LWxlbmd0aDtjb250ZW50LXR5cGU7aG9zdDt4LWFtei1kYXRlO3gtYW16LXNlY3VyaXR5LXRva2VuLCBTaWduYXR1cmU9OTRjNjNhZjA3YWIwZjgyNGJhMDJiMGEzMzM0ZWFlOTkwZWUwZmVjYTk4OGMyMDA2OGMwYjg2ZGY2NTU4NGU1OScsXHJcbiAgICAgICdhbXotc2RrLXJldHJ5JzogJzAvMC81MDAnLFxyXG4gICAgICAnY2xvdWRmcm9udC1pcy1kZXNrdG9wLXZpZXdlcic6ICd0cnVlJyxcclxuICAgICAgJ3gtZm9yd2FyZGVkLXBvcnQnOiAnNDQzJ1xyXG4gICAgfSxcclxuICAgIGRvbWFpbk5hbWU6IG51bGxcclxuICB9LFxyXG4gIHByZXY6IG51bGwsXHJcbiAgaW5mbzoge1xyXG4gICAgc2VsZWN0aW9uU2V0TGlzdDogW1xyXG4gICAgICAnZWRnZXMnLFxyXG4gICAgICAnZWRnZXMvbm9kZScsXHJcbiAgICAgICdlZGdlcy9ub2RlL2lkJyxcclxuICAgICAgJ2VkZ2VzL25vZGUvdGl0bGUnLFxyXG4gICAgICAnZWRnZXMvbm9kZS9tY29tbWVudHMnLFxyXG4gICAgICAnZWRnZXMvbm9kZS9tY29tbWVudHMvaWQnLFxyXG4gICAgICAnZWRnZXMvbm9kZS9tY29tbWVudHMvaHRtbCdcclxuICAgIF0sXHJcbiAgICBzZWxlY3Rpb25TZXRHcmFwaFFMOiAne1xcbicgK1xyXG4gICAgICAnICBlZGdlcyB7XFxuJyArXHJcbiAgICAgICcgICAgbm9kZSB7XFxuJyArXHJcbiAgICAgICcgICAgICBpZFxcbicgK1xyXG4gICAgICAnICAgICAgdGl0bGVcXG4nICtcclxuICAgICAgJyAgICAgIG1jb21tZW50cyB7XFxuJyArXHJcbiAgICAgICcgICAgICAgIGlkXFxuJyArXHJcbiAgICAgICcgICAgICAgIGh0bWxcXG4nICtcclxuICAgICAgJyAgICAgIH1cXG4nICtcclxuICAgICAgJyAgICB9XFxuJyArXHJcbiAgICAgICcgIH1cXG4nICtcclxuICAgICAgJ30nLFxyXG4gICAgZmllbGROYW1lOiAnbXBvc3RGaW5kJyxcclxuICAgIHBhcmVudFR5cGVOYW1lOiAnUXVlcnknLFxyXG4gICAgdmFyaWFibGVzOiB7fVxyXG4gIH0sXHJcbiAgc3Rhc2g6IHsgb3BlcmF0aW9uOiAnZmluZCcgfVxyXG59XHJcbiovXHJcblxyXG5pbXBvcnQgeyBJQXBwU3luY0Nvbm5lY3Rpb24sIElBcHBTeW5jUmVzb2x2ZXJFdmVudCB9IGZyb20gJy4uL2FwcC1zeW5jLnR5cGVzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBBcHBTeW5jRGF0YXNvdXJjZSB7XHJcblxyXG4gICAgcHJvdGVjdGVkIGV2ZW50OiBJQXBwU3luY1Jlc29sdmVyRXZlbnQ7XHJcblxyXG4gICAgY29uc3RydWN0b3IoZXZlbnQ6IElBcHBTeW5jUmVzb2x2ZXJFdmVudCkge1xyXG4gICAgICAgIHRoaXMuZXZlbnQgPSBldmVudDtcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgZmluZD8oKTogSUFwcFN5bmNDb25uZWN0aW9uO1xyXG4gICAgLy8gcHJvdGVjdGVkIGZpbmRPbmU/KCk6IGFueTtcclxuICAgIC8vIHByb3RlY3RlZCBpbnNlcnRPbmU/KCk6IGFueTtcclxuICAgIC8vIHByb3RlY3RlZCBpbnNlcnRNYW55PygpOiBhbnk7XHJcbiAgICAvLyBwcm90ZWN0ZWQgdXBkYXRlT25lPygpOiBhbnk7XHJcbiAgICAvLyBwcm90ZWN0ZWQgdXBkYXRlTWFueT8oKTogYW55O1xyXG4gICAgLy8gcHJvdGVjdGVkIGRlbGV0ZU9uZT8oKTogYW55O1xyXG4gICAgLy8gcHJvdGVjdGVkIGRlbGV0ZU1hbnk/KCk6IGFueTtcclxuICAgIC8vIHByb3RlY3RlZCBkZXN0cm95T25lPygpOiBhbnk7XHJcbiAgICAvLyBwcm90ZWN0ZWQgZGVzdG9yeU1hbnk/KCk6IGFueTtcclxufSJdfQ==