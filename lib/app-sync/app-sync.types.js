"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppSyncLambdaDefaultProps = void 0;
const cdk = require("aws-cdk-lib");
const lambda = require("aws-cdk-lib/aws-lambda");
exports.AppSyncLambdaDefaultProps = {
    runtime: lambda.Runtime.NODEJS_14_X,
    timeout: cdk.Duration.seconds(5),
    bundling: {
        minify: true,
        sourceMap: true
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLXN5bmMudHlwZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYXBwLXN5bmMvYXBwLXN5bmMudHlwZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRUEsbUNBQW1DO0FBQ25DLGlEQUFpRDtBQStCcEMsUUFBQSx5QkFBeUIsR0FBOEM7SUFDaEYsT0FBTyxFQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsV0FBVztJQUNuQyxPQUFPLEVBQUUsR0FBRyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0lBQ2hDLFFBQVEsRUFBRTtRQUNOLE1BQU0sRUFBRSxJQUFJO1FBQ1osU0FBUyxFQUFFLElBQUk7S0FDbEI7Q0FDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby1leHRyYW5lb3VzLWRlcGVuZGVuY2llc1xyXG5pbXBvcnQgKiBhcyBhcHBzeW5jIGZyb20gJ0Bhd3MtY2RrL2F3cy1hcHBzeW5jLWFscGhhJztcclxuaW1wb3J0ICogYXMgY2RrIGZyb20gJ2F3cy1jZGstbGliJztcclxuaW1wb3J0ICogYXMgbGFtYmRhIGZyb20gJ2F3cy1jZGstbGliL2F3cy1sYW1iZGEnO1xyXG5pbXBvcnQgdHlwZSB7IEFwcFN5bmNSZXNvbHZlckV2ZW50IH0gZnJvbSAnYXdzLWxhbWJkYSc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElEYXRhU291cmNlIHtcclxuICAgIFtrZXk6IHN0cmluZ106IGFwcHN5bmMuTGFtYmRhRGF0YVNvdXJjZTtcclxufVxyXG5cclxuLy8gZXhwb3J0IGludGVyZmFjZSBJU2NoZW1hVHlwZXMge1xyXG4vLyAgICAgW2tleTogc3RyaW5nXTogSVNjaGVtYUlucHV0VHlwZTtcclxuLy8gfVxyXG4vLyBleHBvcnQgdHlwZSBJU2NoZW1hSW5wdXRUeXBlID0gSW50ZXJmYWNlVHlwZSB8IE9iamVjdFR5cGUgfCBJbnB1dFR5cGU7XHJcblxyXG4vLyBUeXBlc2NyaXB0IGluc3RhbmNlb2YgcHJvZHVjZXMgdW5wcmVkaWN0YWJsZSByZXN1bHRzIGR1ZSB0byB1c2Ugb2YgZXh0ZW5kcyAoZS5nLiBteU9iamVjdFR5cGUgaW5zdGFuY2VvZiBJbnRlcmZhY2VUeXBlIHJldHVybnMgdHJ1ZSkuIFVzZSBleHBsaWNpdCB0eXBlcyBpbnN0ZWFkLlxyXG5leHBvcnQgaW50ZXJmYWNlIElTY2hlbWFUeXBlcyB7XHJcbiAgICBlbnVtVHlwZXM6IHtcclxuICAgICAgICBba2V5OiBzdHJpbmddOiBhcHBzeW5jLkVudW1UeXBlO1xyXG4gICAgfTtcclxuICAgIGlucHV0VHlwZXM6IHtcclxuICAgICAgICBba2V5OiBzdHJpbmddOiBhcHBzeW5jLklucHV0VHlwZTtcclxuICAgIH07XHJcbiAgICBpbnRlcmZhY2VUeXBlczoge1xyXG4gICAgICAgIFtrZXk6IHN0cmluZ106IGFwcHN5bmMuSW50ZXJmYWNlVHlwZTtcclxuICAgIH07XHJcbiAgICBvYmplY3RUeXBlczoge1xyXG4gICAgICAgIFtrZXk6IHN0cmluZ106IGFwcHN5bmMuT2JqZWN0VHlwZTtcclxuICAgIH07XHJcbiAgICB1bmlvblR5cGVzOiB7XHJcbiAgICAgICAgW2tleTogc3RyaW5nXTogYXBwc3luYy5VbmlvblR5cGU7XHJcbiAgICB9O1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgQXBwU3luY0xhbWJkYURlZmF1bHRQcm9wczogY2RrLmF3c19sYW1iZGFfbm9kZWpzLk5vZGVqc0Z1bmN0aW9uUHJvcHMgPSB7XHJcbiAgICBydW50aW1lOiBsYW1iZGEuUnVudGltZS5OT0RFSlNfMTRfWCxcclxuICAgIHRpbWVvdXQ6IGNkay5EdXJhdGlvbi5zZWNvbmRzKDUpLFxyXG4gICAgYnVuZGxpbmc6IHtcclxuICAgICAgICBtaW5pZnk6IHRydWUsXHJcbiAgICAgICAgc291cmNlTWFwOiB0cnVlXHJcbiAgICB9XHJcbn07XHJcblxyXG4vKlxyXG5leHBvcnQgaW50ZXJmYWNlIEFwcFN5bmNSZXNvbHZlckV2ZW50PFRBcmd1bWVudHMsIFRTb3VyY2UgPSBSZWNvcmQ8c3RyaW5nLCBhbnk+IHwgbnVsbD4ge1xyXG4gICAgYXJndW1lbnRzOiBUQXJndW1lbnRzO1xyXG4gICAgaWRlbnRpdHk/OiBBcHBTeW5jSWRlbnRpdHk7XHJcbiAgICBzb3VyY2U6IFRTb3VyY2U7XHJcbiAgICByZXF1ZXN0OiB7XHJcbiAgICAgICAgaGVhZGVyczogQXBwU3luY1Jlc29sdmVyRXZlbnRIZWFkZXJzO1xyXG4gICAgfTtcclxuICAgIGluZm86IHtcclxuICAgICAgICBzZWxlY3Rpb25TZXRMaXN0OiBzdHJpbmdbXTtcclxuICAgICAgICBzZWxlY3Rpb25TZXRHcmFwaFFMOiBzdHJpbmc7XHJcbiAgICAgICAgcGFyZW50VHlwZU5hbWU6IHN0cmluZztcclxuICAgICAgICBmaWVsZE5hbWU6IHN0cmluZztcclxuICAgICAgICB2YXJpYWJsZXM6IHsgW2tleTogc3RyaW5nXTogYW55IH07XHJcbiAgICB9O1xyXG4gICAgcHJldjogeyByZXN1bHQ6IHsgW2tleTogc3RyaW5nXTogYW55IH0gfSB8IG51bGw7XHJcbiAgICBzdGFzaDogeyBba2V5OiBzdHJpbmddOiBhbnkgfTtcclxufVxyXG4qL1xyXG5cclxuZXhwb3J0IHR5cGUgSUFwcFN5bmNSZXNvbHZlckV2ZW50ID0gQXBwU3luY1Jlc29sdmVyRXZlbnQ8YW55PlxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJQXBwU3luY09wZXJhdGlvbkFyZ3Mge1xyXG4gICAgW2tleTogc3RyaW5nXTogYXBwc3luYy5HcmFwaHFsVHlwZTtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJQXBwU3luY0Nvbm5lY3Rpb24ge1xyXG4gICAgZWRnZXM/OiBbe1xyXG4gICAgICAgIGN1cnNvcj86IHN0cmluZztcclxuICAgICAgICBub2RlOiBhbnk7XHJcbiAgICB9XTtcclxuICAgIHBhZ2VJbmZvOiBJQXBwU3luY1BhZ2VJbmZvT2Zmc2V0IHwgSUFwcFN5bmNQYWdlSW5mb0N1cnNvcjtcclxuICAgIHRvdGFsQ291bnQ/OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSUFwcFN5bmNQYWdlSW5mb09mZnNldCB7XHJcbiAgICBza2lwOiBudW1iZXI7XHJcbiAgICBsaW1pdDogbnVtYmVyO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElBcHBTeW5jUGFnZUluZm9DdXJzb3Ige1xyXG4gICAgaGFzUHJldmlvdXNQYWdlOiBib29sZWFuO1xyXG4gICAgaGFzTmV4dFBhZ2U6IGJvb2xlYW47XHJcbiAgICBzdGFydEN1cnNvcjogc3RyaW5nO1xyXG4gICAgZW5kQ3Vyc29yOiBzdHJpbmc7XHJcbn1cclxuXHJcbi8vIExpc3Qgb2YgbmVzdGVkIElGaWVsZHMuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQXBwU3luY0lGaWVsZHMge1xyXG4gICAgW2tleTogc3RyaW5nXTogQXBwU3luY0lGaWVsZHMgfCBhcHBzeW5jLklGaWVsZDtcclxufVxyXG5cclxuLypcclxuLy8gRXhhbXBsZSBJQU0gaWRlbnRpdHkgZnJvbSBBcHBTeW5jIGV2ZW50LlxyXG5pZGVudGl0eToge1xyXG4gICAgYWNjb3VudElkOiAnMDY2MjA5NjUzNTY3JyxcclxuICAgIGNvZ25pdG9JZGVudGl0eUF1dGhQcm92aWRlcjogbnVsbCxcclxuICAgIGNvZ25pdG9JZGVudGl0eUF1dGhUeXBlOiBudWxsLFxyXG4gICAgY29nbml0b0lkZW50aXR5SWQ6IG51bGwsXHJcbiAgICBjb2duaXRvSWRlbnRpdHlQb29sSWQ6IG51bGwsXHJcbiAgICBzb3VyY2VJcDogWyAnNTQuMjQwLjIzMC4yNDQnIF0sXHJcbiAgICB1c2VyQXJuOiAnYXJuOmF3czpzdHM6OjA2NjIwOTY1MzU2Nzphc3N1bWVkLXJvbGUvQVdTUmVzZXJ2ZWRTU09fQWRtaW5pc3RyYXRvckFjY2Vzc185NWFjZGJjODFjODQ0YzU2L2FkbWluJyxcclxuICAgIHVzZXJuYW1lOiAnQVJPQVE2MlRIRU03NlhRNlRPVVBLOmFkbWluJ1xyXG59XHJcbi8vIEV4YW1wbGUgQ29nbml0byBjbGFpbSBmcm9tIEFwcFN5bmMgZXZlbnQuXHJcbmlkZW50aXR5OiB7XHJcbiAgICBjbGFpbXM6IHtcclxuICAgICAgc3ViOiAnNDI4NTMyZTMtNGViNi00ODg5LWJhOTQtNzI2ZmZlMGYwZDg3JyxcclxuICAgICAgJ2NvZ25pdG86Z3JvdXBzJzogW0FycmF5XSxcclxuICAgICAgZW1haWxfdmVyaWZpZWQ6IHRydWUsXHJcbiAgICAgIGlzczogJ2h0dHBzOi8vY29nbml0by1pZHAudXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vdXMtd2VzdC0yXzFkZVN0Z1hqYycsXHJcbiAgICAgICdjb2duaXRvOnVzZXJuYW1lJzogJzQyODUzMmUzLTRlYjYtNDg4OS1iYTk0LTcyNmZmZTBmMGQ4NycsXHJcbiAgICAgIG9yaWdpbl9qdGk6ICc1Y2M5OTA1MC0wOGUxLTRmNTAtOGM3Ny0wNzYwNzJiODcxYjAnLFxyXG4gICAgICBhdWQ6ICc3amprY2szNWpxbjNkOWMxM2sxaHQzZmliaycsXHJcbiAgICAgIGV2ZW50X2lkOiAnZWZkMGE1ZDktNzg1Yy00YjRlLThiZDktNTIwZTM1YTFmYzYzJyxcclxuICAgICAgdG9rZW5fdXNlOiAnaWQnLFxyXG4gICAgICBhdXRoX3RpbWU6IDE2NTI2NjEwOTEsXHJcbiAgICAgIGV4cDogMTY1MjY2NDY5MSxcclxuICAgICAgaWF0OiAxNjUyNjYxMDkxLFxyXG4gICAgICBqdGk6ICdiMWY3MWU0Yi0xZmEyLTRjMWMtYjQ4My1mYzkyM2FjYWZkMzQnLFxyXG4gICAgICBlbWFpbDogJ21hdHRoZXdAam9tcHguY29tJ1xyXG4gICAgfSxcclxuICAgIGRlZmF1bHRBdXRoU3RyYXRlZ3k6ICdERU5ZJyxcclxuICAgIGdyb3VwczogWyAnYWRtaW4nIF0sXHJcbiAgICBpc3N1ZXI6ICdodHRwczovL2NvZ25pdG8taWRwLnVzLXdlc3QtMi5hbWF6b25hd3MuY29tL3VzLXdlc3QtMl8xZGVTdGdYamMnLFxyXG4gICAgc291cmNlSXA6IFsgJzY3LjUyLjE2MC4yMTQnIF0sXHJcbiAgICBzdWI6ICc0Mjg1MzJlMy00ZWI2LTQ4ODktYmE5NC03MjZmZmUwZjBkODcnLFxyXG4gICAgdXNlcm5hbWU6ICc0Mjg1MzJlMy00ZWI2LTQ4ODktYmE5NC03MjZmZmUwZjBkODcnXHJcbn1cclxuKi9cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSUFwcFN5bmNNZXRob2RQcm9wc0NvZ25pdG8ge1xyXG4gICAgc3ViOiBzdHJpbmc7XHJcbiAgICBlbWFpbDogc3RyaW5nO1xyXG4gICAgZ3JvdXBzOiBzdHJpbmdbXTtcclxuICAgIGF1dGhvcml6YXRpb246IHN0cmluZztcclxufVxyXG5leHBvcnQgaW50ZXJmYWNlIElBcHBTeW5jTWV0aG9kUHJvcHMge1xyXG4gICAgY29nbml0bz86IElBcHBTeW5jTWV0aG9kUHJvcHNDb2duaXRvO1xyXG4gICAgZXZlbnQ6IGFueTtcclxufVxyXG5cclxuXHJcbiJdfQ==